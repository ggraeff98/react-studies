{"ast":null,"code":"var _jsxFileName = \"/home/gustavograeff/Gustavo/studies/react-studies/burguer-builder/src/containers/BuguerBuilder/BurguerBuilder.js\";\nimport React, { useState } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burguer from '../../components/Burguer/Burguer';\nimport BuildControls from '../../components/Burguer/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burguer/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst BurguerBuilder = () => {\n  const [ingredientsState, setIngridientsState] = useState({\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 4,\n    purchasable: false,\n    purchasing: false\n  });\n\n  const updatePurchaseState = (ingredients, totalPrice) => {\n    const ingredientsAmount = Object.values(ingredients).reduce((sum, el) => {\n      return sum += el;\n    }, 0);\n    setIngridientsState({ ...ingredientsState,\n      ingredients,\n      totalPrice,\n      purchasable: ingredientsAmount > 0\n    });\n  };\n\n  const [spinnerState, setSpinnerState] = useState({\n    isLoading: false\n  });\n\n  const spinnerHandler = isLoading => {\n    setSpinnerState({\n      isLoading\n    });\n  };\n\n  const addIngredientHandler = type => {\n    const oldIngredientAmount = ingredientsState.ingredients[type];\n    const newIngredientAmount = oldIngredientAmount + 1;\n    const ingredients = { ...ingredientsState.ingredients\n    };\n    ingredients[type] = newIngredientAmount;\n    const priceAddition = INGREDIENTS_PRICES[type];\n    const oldPrice = ingredientsState.totalPrice;\n    const totalPrice = oldPrice + priceAddition;\n    setIngridientsState({ ...ingredientsState,\n      ingredients,\n      totalPrice\n    });\n    updatePurchaseState(ingredients, totalPrice);\n  };\n\n  const removeIngredientHandler = type => {\n    const oldIngredientAmount = ingredientsState.ingredients[type];\n    if (oldIngredientAmount === 0) return;\n    const newIngredientAmount = oldIngredientAmount - 1;\n    const ingredients = { ...ingredientsState.ingredients\n    };\n    ingredients[type] = newIngredientAmount;\n    const priceAddition = INGREDIENTS_PRICES[type];\n    const oldPrice = ingredientsState.totalPrice;\n    const totalPrice = oldPrice - priceAddition;\n    setIngridientsState({ ...ingredientsState,\n      ingredients,\n      totalPrice\n    });\n    updatePurchaseState(ingredients, totalPrice);\n  };\n\n  const purchaseHandler = () => {\n    console.log('purchaseHandler');\n    setIngridientsState({ ...ingredientsState,\n      purchasing: !ingredientsState.purchasing\n    });\n  };\n\n  const purchaseCancel = () => {\n    console.log('aaaaaaa');\n    purchaseHandler();\n  };\n\n  const purchaseContinue = () => {\n    spinnerHandler(true);\n    const order = {\n      ingredients: ingredientsState.ingredients,\n      price: ingredientsState.totalPrice.toFixed(2),\n      customer: {\n        name: 'Gustavo Graeff',\n        address: {\n          steert: 'Teststreet 111',\n          zipCode: '123456789',\n          country: 'Brazil'\n        },\n        email: 'gustavo@mail.com'\n      },\n      deliveryMethod: 'fastest'\n    };\n    axios.post('/orders.json', order).then(response => {\n      spinnerHandler(false);\n      purchaseHandler();\n      console.log(response);\n    }).catch(error => {\n      spinnerHandler(false);\n      purchaseHandler();\n      console.log(error);\n    });\n  };\n\n  const disabledInfo = { ...ingredientsState.ingredients\n  };\n\n  for (let key in disabledInfo) {\n    disabledInfo[key] = disabledInfo[key] <= 0;\n  }\n\n  const ordersToShow = spinnerState.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(OrderSummary, {\n    ingredients: ingredientsState.ingredients,\n    successClicked: purchaseContinue,\n    dangerClicked: purchaseCancel,\n    price: ingredientsState.totalPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    show: ingredientsState.purchasing,\n    closeModal: purchaseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, ordersToShow), /*#__PURE__*/React.createElement(Burguer, {\n    ingredients: ingredientsState.ingredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BuildControls, {\n    ingredientAdded: addIngredientHandler,\n    ingredientRemoved: removeIngredientHandler,\n    disabled: disabledInfo,\n    price: ingredientsState.totalPrice,\n    purschasable: ingredientsState.purchasable,\n    purschasing: purchaseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default withErrorHandler(BurguerBuilder, axios);","map":{"version":3,"sources":["/home/gustavograeff/Gustavo/studies/react-studies/burguer-builder/src/containers/BuguerBuilder/BurguerBuilder.js"],"names":["React","useState","Aux","Burguer","BuildControls","Modal","OrderSummary","axios","Spinner","WithErrorHandler","INGREDIENTS_PRICES","salad","cheese","meat","bacon","BurguerBuilder","ingredientsState","setIngridientsState","ingredients","totalPrice","purchasable","purchasing","updatePurchaseState","ingredientsAmount","Object","values","reduce","sum","el","spinnerState","setSpinnerState","isLoading","spinnerHandler","addIngredientHandler","type","oldIngredientAmount","newIngredientAmount","priceAddition","oldPrice","removeIngredientHandler","purchaseHandler","console","log","purchaseCancel","purchaseContinue","order","price","toFixed","customer","name","address","steert","zipCode","country","email","deliveryMethod","post","then","response","catch","error","disabledInfo","key","ordersToShow","withErrorHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burguer from '../../components/Burguer/Burguer';\nimport BuildControls from '../../components/Burguer/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burguer/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst BurguerBuilder = () => {\n  const [ingredientsState, setIngridientsState] = useState({\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 4,\n    purchasable: false,\n    purchasing: false\n  });\n\n  const updatePurchaseState = (ingredients, totalPrice) => {\n    const ingredientsAmount = Object.values(ingredients).reduce((sum, el) => {\n      return (sum += el);\n    }, 0);\n\n    setIngridientsState({\n      ...ingredientsState,\n      ingredients,\n      totalPrice,\n      purchasable: ingredientsAmount > 0\n    });\n  };\n\n  const [spinnerState, setSpinnerState] = useState({\n    isLoading: false\n  });\n\n  const spinnerHandler = (isLoading) => {\n    setSpinnerState({\n      isLoading\n    });\n  };\n\n  const addIngredientHandler = (type) => {\n    const oldIngredientAmount = ingredientsState.ingredients[type];\n    const newIngredientAmount = oldIngredientAmount + 1;\n    const ingredients = {\n      ...ingredientsState.ingredients\n    };\n    ingredients[type] = newIngredientAmount;\n\n    const priceAddition = INGREDIENTS_PRICES[type];\n    const oldPrice = ingredientsState.totalPrice;\n    const totalPrice = oldPrice + priceAddition;\n    setIngridientsState({\n      ...ingredientsState,\n      ingredients,\n      totalPrice\n    });\n    updatePurchaseState(ingredients, totalPrice);\n  };\n\n  const removeIngredientHandler = (type) => {\n    const oldIngredientAmount = ingredientsState.ingredients[type];\n    if (oldIngredientAmount === 0) return;\n\n    const newIngredientAmount = oldIngredientAmount - 1;\n    const ingredients = {\n      ...ingredientsState.ingredients\n    };\n    ingredients[type] = newIngredientAmount;\n\n    const priceAddition = INGREDIENTS_PRICES[type];\n    const oldPrice = ingredientsState.totalPrice;\n    const totalPrice = oldPrice - priceAddition;\n    setIngridientsState({\n      ...ingredientsState,\n      ingredients,\n      totalPrice\n    });\n    updatePurchaseState(ingredients, totalPrice);\n  };\n\n  const purchaseHandler = () => {\n    console.log('purchaseHandler');\n    setIngridientsState({\n      ...ingredientsState,\n      purchasing: !ingredientsState.purchasing\n    });\n  };\n\n  const purchaseCancel = () => {\n    console.log('aaaaaaa');\n    purchaseHandler();\n  };\n\n  const purchaseContinue = () => {\n    spinnerHandler(true);\n    const order = {\n      ingredients: ingredientsState.ingredients,\n      price: ingredientsState.totalPrice.toFixed(2),\n      customer: {\n        name: 'Gustavo Graeff',\n        address: {\n          steert: 'Teststreet 111',\n          zipCode: '123456789',\n          country: 'Brazil'\n        },\n        email: 'gustavo@mail.com'\n      },\n      deliveryMethod: 'fastest'\n    };\n    axios\n      .post('/orders.json', order)\n      .then((response) => {\n        spinnerHandler(false);\n        purchaseHandler();\n        console.log(response);\n      })\n      .catch((error) => {\n        spinnerHandler(false);\n        purchaseHandler();\n        console.log(error);\n      });\n  };\n\n  const disabledInfo = {\n    ...ingredientsState.ingredients\n  };\n\n  for (let key in disabledInfo) {\n    disabledInfo[key] = disabledInfo[key] <= 0;\n  }\n\n  const ordersToShow = spinnerState.isLoading ? (\n    <Spinner></Spinner>\n  ) : (\n    <OrderSummary\n      ingredients={ingredientsState.ingredients}\n      successClicked={purchaseContinue}\n      dangerClicked={purchaseCancel}\n      price={ingredientsState.totalPrice}\n    ></OrderSummary>\n  );\n\n  return (\n    <Aux>\n      <Modal show={ingredientsState.purchasing} closeModal={purchaseHandler}>\n        {/* <OrderSummary\n          ingredients={ingredientsState.ingredients}\n          successClicked={purchaseContinue}\n          dangerClicked={purchaseCancel}\n          price={ingredientsState.totalPrice}\n        ></OrderSummary> */}\n        {ordersToShow}\n      </Modal>\n      <Burguer ingredients={ingredientsState.ingredients}></Burguer>\n      <BuildControls\n        ingredientAdded={addIngredientHandler}\n        ingredientRemoved={removeIngredientHandler}\n        disabled={disabledInfo}\n        price={ingredientsState.totalPrice}\n        purschasable={ingredientsState.purchasable}\n        purschasing={purchaseHandler}\n      ></BuildControls>\n    </Aux>\n  );\n};\n\nexport default withErrorHandler(BurguerBuilder, axios);\n"]},"metadata":{},"sourceType":"module"}