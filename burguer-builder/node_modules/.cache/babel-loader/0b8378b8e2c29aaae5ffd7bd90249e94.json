{"ast":null,"code":"var _jsxFileName = \"/home/gustavograeff/Gustavo/studies/react-studies/burguer-builder/src/components/Burguer/Burguer.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport BurgueIngredient from './BurguerIngredient/BurguerIngredient';\nconst BurguerStyledDiv = styled.div`\n  width: 100%;\n  margin: auto;\n  height: 250px;\n  overflow: auto;\n  text-align: center;\n  font-weight: bold;\n  font-size: 1.2rem;\n\n  @media (min-width: 500px) and (min-height: 400px) {\n    width: 350px;\n    height: 300px;\n  }\n\n  @media (min-width: 500px) and (min-height: 401px) {\n    width: 450px;\n    height: 400px;\n  }\n\n  @media (min-width: 1000px) and (min-height: 700px) {\n    width: 700px;\n    height: 600px;\n  }\n`;\n\nconst burguer = props => {\n  // const fullBurguer = Object.keys(props.ingredients).map(\n  //   (ingredientKey) => {\n  //     return [...Array(props.ingredients[ingredientKey])].map((_, i) => {\n  //       return (\n  //         <BurgueIngredient\n  //           type={ingredientKey}\n  //           key={ingredientKey + i}\n  //         ></BurgueIngredient>\n  //       );\n  //     });\n  //   }\n  // );\n  const ingredients = Object.keys(props.ingredients).map(ingredientKey => {\n    return props.ingredients[ingredientKey] > 0 ? {\n      type: ingredientKey,\n      amount: props.ingredients[ingredientKey]\n    } : null;\n  }).filter(ingredient => ingredient && ingredient.amount);\n  const fullBurguer = [];\n\n  const setFullBurguer = () => {\n    ingredients.forEach(ingredient => {\n      if (!ingredient) return;\n\n      for (let i = 0; i < ingredient.amount; i++) {\n        fullBurguer.push( /*#__PURE__*/React.createElement(BurgueIngredient, {\n          type: ingredient.type,\n          key: ingredient.type + i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }));\n      }\n    });\n  };\n\n  ingredients.length ? setFullBurguer() : fullBurguer.push( /*#__PURE__*/React.createElement(\"p\", {\n    key: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }\n  }, \"Please start adding ingredients!\"));\n  return /*#__PURE__*/React.createElement(BurguerStyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BurgueIngredient, {\n    type: \"bread-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), fullBurguer, /*#__PURE__*/React.createElement(BurgueIngredient, {\n    type: \"bread-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default burguer;","map":{"version":3,"sources":["/home/gustavograeff/Gustavo/studies/react-studies/burguer-builder/src/components/Burguer/Burguer.js"],"names":["React","styled","BurgueIngredient","BurguerStyledDiv","div","burguer","props","ingredients","Object","keys","map","ingredientKey","type","amount","filter","ingredient","fullBurguer","setFullBurguer","forEach","i","push","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAApC;;AAyBA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACC,WAAlB,EACjBG,GADiB,CACZC,aAAD,IAAmB;AACtB,WAAOL,KAAK,CAACC,WAAN,CAAkBI,aAAlB,IAAmC,CAAnC,GACH;AACEC,MAAAA,IAAI,EAAED,aADR;AAEEE,MAAAA,MAAM,EAAEP,KAAK,CAACC,WAAN,CAAkBI,aAAlB;AAFV,KADG,GAKH,IALJ;AAMD,GARiB,EASjBG,MATiB,CASTC,UAAD,IAAgBA,UAAU,IAAIA,UAAU,CAACF,MAT/B,CAApB;AAWA,QAAMG,WAAW,GAAG,EAApB;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3BV,IAAAA,WAAW,CAACW,OAAZ,CAAqBH,UAAD,IAAgB;AAClC,UAAI,CAACA,UAAL,EAAiB;;AACjB,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACF,MAA/B,EAAuCM,CAAC,EAAxC,EAA4C;AAC1CH,QAAAA,WAAW,CAACI,IAAZ,eACE,oBAAC,gBAAD;AACE,UAAA,IAAI,EAAEL,UAAU,CAACH,IADnB;AAEE,UAAA,GAAG,EAAEG,UAAU,CAACH,IAAX,GAAkBO,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AACF,KAVD;AAWD,GAZD;;AAcAZ,EAAAA,WAAW,CAACc,MAAZ,GACIJ,cAAc,EADlB,GAEID,WAAW,CAACI,IAAZ,eAAiB;AAAG,IAAA,GAAG,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAjB,CAFJ;AAIA,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,WAFH,eAGE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CApDD;;AAsDA,eAAeX,OAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport BurgueIngredient from './BurguerIngredient/BurguerIngredient';\n\nconst BurguerStyledDiv = styled.div`\n  width: 100%;\n  margin: auto;\n  height: 250px;\n  overflow: auto;\n  text-align: center;\n  font-weight: bold;\n  font-size: 1.2rem;\n\n  @media (min-width: 500px) and (min-height: 400px) {\n    width: 350px;\n    height: 300px;\n  }\n\n  @media (min-width: 500px) and (min-height: 401px) {\n    width: 450px;\n    height: 400px;\n  }\n\n  @media (min-width: 1000px) and (min-height: 700px) {\n    width: 700px;\n    height: 600px;\n  }\n`;\n\nconst burguer = (props) => {\n  // const fullBurguer = Object.keys(props.ingredients).map(\n  //   (ingredientKey) => {\n  //     return [...Array(props.ingredients[ingredientKey])].map((_, i) => {\n  //       return (\n  //         <BurgueIngredient\n  //           type={ingredientKey}\n  //           key={ingredientKey + i}\n  //         ></BurgueIngredient>\n  //       );\n  //     });\n  //   }\n  // );\n\n  const ingredients = Object.keys(props.ingredients)\n    .map((ingredientKey) => {\n      return props.ingredients[ingredientKey] > 0\n        ? {\n            type: ingredientKey,\n            amount: props.ingredients[ingredientKey]\n          }\n        : null;\n    })\n    .filter((ingredient) => ingredient && ingredient.amount);\n\n  const fullBurguer = [];\n\n  const setFullBurguer = () => {\n    ingredients.forEach((ingredient) => {\n      if (!ingredient) return;\n      for (let i = 0; i < ingredient.amount; i++) {\n        fullBurguer.push(\n          <BurgueIngredient\n            type={ingredient.type}\n            key={ingredient.type + i}\n          ></BurgueIngredient>\n        );\n      }\n    });\n  };\n\n  ingredients.length\n    ? setFullBurguer()\n    : fullBurguer.push(<p key=\"default\">Please start adding ingredients!</p>);\n\n  return (\n    <BurguerStyledDiv>\n      <BurgueIngredient type=\"bread-top\"></BurgueIngredient>\n      {fullBurguer}\n      <BurgueIngredient type=\"bread-bottom\"></BurgueIngredient>\n    </BurguerStyledDiv>\n  );\n};\n\nexport default burguer;\n"]},"metadata":{},"sourceType":"module"}